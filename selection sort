
#include<iostream>

//selection short


//algo => find the minimum and swap

void swapValue(int &a, int &b)
{
    int temp = a;
    a=b;
    b =temp;
}

void selectionSort(int arr[], int n)
{
    
    for(int i=0; i<n-1; i++){
        int min = i;
        for(int j = i; j<n; j++){
            if(arr[j] < arr[min]){
                min = j;
            }
        }
        
        swapValue(arr[i], arr[min]);
    }
}

void printArray(int arr[], int n)
{
    for(int i = 0; i<n ;i++){
        
        std::cout<<arr[i]<<" ";
    }
    std::cout<<std::endl;
}


int main()
{
    int arr[] = {12,1,32,8,76,3,0,19};
    
    int n = sizeof(arr)/sizeof(arr[0]);
    
    std::cout<<"Before sorting"<<std::endl;
    printArray(arr, n);
    
    selectionSort(arr,n);
    
    std::cout<<"After sorting"<<std::endl;
    
    printArray(arr,n);
    
    //The best, worst and average Time complexity is O(n^2)
}
